{"ast":null,"code":"var _jsxFileName = \"/Users/dk-lite/MyFiles/git/dk-lite-components/src/components/Table/table.js\";\nimport React from 'react';\nimport styled from 'styled-components'; // 표는 table 태그로 만듭니다.\n// 행은 tr 태그로 만듭니다.\n// 열의 제목이 들어가는 셀은 th 태그로 만듭니다.\n// 내용이 들어가는 셀은 td 태그로 만듭니다.\n// 각 열의 의미에 따라 thead, tbody, tfoot 태그로 구분지을 수도 있습니다.\n// 가로로 이웃한 셀을 합칠 때에는 colspan 속성을 사용합니다.\n// 세로로 이웃한 셀을 합칠 때에는 rowspan 속성을 사용합니다.\n// 표 제목은 caption 태그로 만듭니다.\n\nconst styledTable = styled.table`\n\n    \n    \n`;\nconst Tr = styled.tr`\n    color : #666;\n`;\nconst Td = styled.td`\n\n`;\nconst Th = styled.th`\n    background: #5459FF; \n    color: white;\n    font-family: Nanum Gothic, sans-serif; \n`;\n\nfunction Table(props) {\n  const {\n    title,\n    colums,\n    datas,\n    ...other\n  } = props;\n  const header_line = colums.map(object => React.createElement(Th, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, object.name));\n  const data_lines = datas.map(data => React.createElement(Tr, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, colums.map(object => React.createElement(Td, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" \", data[object.tag]))));\n  return React.createElement(\"styledTable\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Tr, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, header_line), data_lines);\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/dk-lite/MyFiles/git/dk-lite-components/src/components/Table/table.js"],"names":["React","styled","styledTable","table","Tr","tr","Td","td","Th","th","Table","props","title","colums","datas","other","header_line","map","object","name","data_lines","data","tag"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAM;;;;CAAjC;AAKA,MAAMC,EAAE,GAAGH,MAAM,CAACI,EAAG;;CAArB;AAGA,MAAMC,EAAE,GAAGL,MAAM,CAACM,EAAG;;CAArB;AAGA,MAAMC,EAAE,GAAGP,MAAM,CAACQ,EAAG;;;;CAArB;;AASA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AACjB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,KAAhB;AAAwB,OAAGC;AAA3B,MAAoCJ,KAA1C;AAEA,QAAMK,WAAW,GAAGH,MAAM,CAACI,GAAP,CAAYC,MAAM,IAC9B,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,MAAM,CAACC,IAAb,CADY,CAApB;AAGA,QAAMC,UAAU,GAAGN,KAAK,CAACG,GAAN,CAAWI,IAAI,IAC9B,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,MAAM,CAACI,GAAP,CAAYC,MAAM,IAAM,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMG,IAAI,CAACH,MAAM,CAACI,GAAR,CAAV,CAAxB,CADL,CADe,CAAnB;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCN,WADD,CADJ,EAIKI,UAJL,CADJ;AAQH;;AAED,eAAeV,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\n\n// 표는 table 태그로 만듭니다.\n// 행은 tr 태그로 만듭니다.\n// 열의 제목이 들어가는 셀은 th 태그로 만듭니다.\n// 내용이 들어가는 셀은 td 태그로 만듭니다.\n// 각 열의 의미에 따라 thead, tbody, tfoot 태그로 구분지을 수도 있습니다.\n// 가로로 이웃한 셀을 합칠 때에는 colspan 속성을 사용합니다.\n// 세로로 이웃한 셀을 합칠 때에는 rowspan 속성을 사용합니다.\n// 표 제목은 caption 태그로 만듭니다.\n\nconst styledTable = styled.table`\n\n    \n    \n`\nconst Tr = styled.tr`\n    color : #666;\n`\nconst Td = styled.td`\n\n`\nconst Th = styled.th`\n    background: #5459FF; \n    color: white;\n    font-family: Nanum Gothic, sans-serif; \n`\n\n\n\n\nfunction Table(props){\n    const {title, colums, datas , ...other} = props;\n\n    const header_line = colums.map( object => (\n            <Th >{object.name}</Th>\n    ))\n    const data_lines = datas.map( data => \n        <Tr>\n            {colums.map( object =>  (<Td> {data[object.tag]}</Td>)) }\n        </Tr>\n    )\n\n    return (\n        <styledTable>\n            <Tr>\n            {header_line}\n            </Tr>\n            {data_lines}\n        </styledTable>\n    )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}