{"ast":null,"code":"var _jsxFileName = \"/Users/dk-lite/MyFiles/git/dk-lite-components/src/components/Table/table.js\";\nimport React from 'react';\nimport styled from 'styled-components'; // 표는 table 태그로 만듭니다.\n// 행은 tr 태그로 만듭니다.\n// 열의 제목이 들어가는 셀은 th 태그로 만듭니다.\n// 내용이 들어가는 셀은 td 태그로 만듭니다.\n// 각 열의 의미에 따라 thead, tbody, tfoot 태그로 구분지을 수도 있습니다.\n// 가로로 이웃한 셀을 합칠 때에는 colspan 속성을 사용합니다.\n// 세로로 이웃한 셀을 합칠 때에는 rowspan 속성을 사용합니다.\n// 표 제목은 caption 태그로 만듭니다.\n\nconst customDiv = styled.div`\n    width: 100%;\n    float: left;\n`;\nconst styledTable = styled.table`\n\n    width: 100px;\n    \n`;\nconst Tr = styled.tr`\n    color : #666;\n`;\nconst Td = styled.td`\n\n`;\nconst Th = styled.th`\n    border: 0.5px solid;\n    border-radius: 3px;\n    background: #5459FF; \n    color: white;\n    font-family: Nanum Gothic, sans-serif; \n    \n`;\n\nfunction Table(props) {\n  const {\n    colums,\n    datas\n  } = props;\n  const header_line = colums.map(object => React.createElement(Th, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, object.name));\n  const data_lines = datas.map(data => React.createElement(Tr, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, colums.map(object => React.createElement(Td, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", data[object.tag]))));\n  return React.createElement(\"customDiv\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"styledTable\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Tr, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, header_line), data_lines));\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/dk-lite/MyFiles/git/dk-lite-components/src/components/Table/table.js"],"names":["React","styled","customDiv","div","styledTable","table","Tr","tr","Td","td","Th","th","Table","props","colums","datas","header_line","map","object","name","data_lines","data","tag"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;;;CAA7B;AAIA,MAAMC,WAAW,GAAGH,MAAM,CAACI,KAAM;;;;CAAjC;AAKA,MAAMC,EAAE,GAAGL,MAAM,CAACM,EAAG;;CAArB;AAGA,MAAMC,EAAE,GAAGP,MAAM,CAACQ,EAAG;;CAArB;AAGA,MAAMC,EAAE,GAAGT,MAAM,CAACU,EAAG;;;;;;;CAArB;;AASA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AACjB,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBF,KAA1B;AAEA,QAAMG,WAAW,GAAGF,MAAM,CAACG,GAAP,CAAYC,MAAM,IAC9B,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,MAAM,CAACC,IAAb,CADY,CAApB;AAGA,QAAMC,UAAU,GAAGL,KAAK,CAACE,GAAN,CAAWI,IAAI,IAC9B,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,MAAM,CAACG,GAAP,CAAYC,MAAM,IAAM,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMG,IAAI,CAACH,MAAM,CAACI,GAAR,CAAV,CAAxB,CADL,CADe,CAAnB;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,WADL,CADJ,EAIKI,UAJL,CADJ,CADJ;AAWH;;AAED,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\n\n// 표는 table 태그로 만듭니다.\n// 행은 tr 태그로 만듭니다.\n// 열의 제목이 들어가는 셀은 th 태그로 만듭니다.\n// 내용이 들어가는 셀은 td 태그로 만듭니다.\n// 각 열의 의미에 따라 thead, tbody, tfoot 태그로 구분지을 수도 있습니다.\n// 가로로 이웃한 셀을 합칠 때에는 colspan 속성을 사용합니다.\n// 세로로 이웃한 셀을 합칠 때에는 rowspan 속성을 사용합니다.\n// 표 제목은 caption 태그로 만듭니다.\n\n\nconst customDiv = styled.div`\n    width: 100%;\n    float: left;\n`\nconst styledTable = styled.table`\n\n    width: 100px;\n    \n`\nconst Tr = styled.tr`\n    color : #666;\n`\nconst Td = styled.td`\n\n`\nconst Th = styled.th`\n    border: 0.5px solid;\n    border-radius: 3px;\n    background: #5459FF; \n    color: white;\n    font-family: Nanum Gothic, sans-serif; \n    \n`\n\nfunction Table(props){\n    const { colums, datas } = props;\n\n    const header_line = colums.map( object => (\n            <Th >{object.name}</Th>\n    ))\n    const data_lines = datas.map( data => \n        <Tr>\n            {colums.map( object =>  (<Td> {data[object.tag]}</Td>)) }\n        </Tr>\n    )\n\n    return (\n        <customDiv> \n            <styledTable>\n                <Tr>\n                    {header_line}\n                </Tr>\n                {data_lines}\n            </styledTable>\n        </customDiv>\n        \n    )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}